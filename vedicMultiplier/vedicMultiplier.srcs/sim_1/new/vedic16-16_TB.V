`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/10/2018 05:14:12 PM
// Design Name: 
// Module Name: 4bit_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module ThirtyTwobit_tb();
reg [31:0] inNum1;
reg [31:0] inNum2;
reg clk;
wire [63:0] outNum;

vedic32_32 mult(inNum1,inNum2,outNum);

initial begin
    clk = 0;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b00011101010011010101110000111010;
    inNum2 <= 32'b00001101010011010010010100111010;
    #100;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b01111100000001110000000000110010;//
    inNum2 <= 32'b00000000000111111100000000011010;//
    #100;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b00100011100000000000011100000001;//
    inNum2 <= 32'b01011000000111010001110000000001;//
    #100;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b01100000010000001100001001000010;//
    inNum2 <= 32'b01100000100001100000110100010010;//
    #100;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b00000000011100000001000000000100;//
    inNum2 <= 32'b00011100000000000000000001000100;//
    #100;   
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b00100000001000000000000000001000;//
    inNum2 <= 32'b00100000010000000000000000001000;//
    #100;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b01000000000000000000000000000000;//
    inNum2 <= 32'b01000000000000000000000000000000;//
    #100;
    inNum1 <= 32'b00000000000000000000000000000000;//0
    inNum2 <= 32'b00000000000000000000000000000000;//0
    #100
    inNum1 <= 32'b01111111111111111111111111111111;//2147483647
    inNum2 <= 32'b01111111111111111111111111111111;//2147483647
    #100;
    inNum1 <= 32'b1100;//12
    inNum2 <= 32'b1100;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0;
    #100;
    inNum1 <= 32'b00000000000000000000000100010111;
    inNum2 <= 32'b001011001000;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0; 
    #100;
    inNum1 <= 32'b01000101;
    inNum2 <= 32'b000110100100;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0;  
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b001000111101;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0;
    #100;
    inNum1 <= 32'b00101010;
    inNum2 <= 32'b10110011;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0;
    #100;
    inNum1 <= 32'b1111111111111111;
    inNum2 <= 32'b1111111111111111;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0; 
    #100;
    inNum1 <= 32'b1010101010101010;
    inNum2 <= 32'b0101010101010101;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0;  
    #100;
    inNum1 <= 32'b1011110110111010;
    inNum2 <= 32'b0111011001011000;
    #100;
    inNum1 <= 32'b0;
    inNum2 <= 32'b0; 
end

always
 #1 clk = ~clk;
 
endmodule
